# If using Iceberg with MinIO and SQLITE for catalog store, you can configure it like this:

# catalog:
#   default:
#     type: sql
#     uri: sqlite:////tmp/warehouse/pyiceberg_catalog.db
#     # warehouse: file://///tmp/warehouse
#     warehouse: "s3://my-bucket"  # S3 path (MinIO bucket prefix)
#     s3.endpoint: "http://127.0.0.1:9000"  # MinIO endpoint
#     s3.access-key-id: "admin"  # Replace with your MinIO access key
#     s3.secret-access-key: "password"  # Replace with your MinIO secret key
#     s3.region: "us-east-1"  # Dummy region (if required)
#     s3.path-style-access: "true"  # Important for MinIO

# If using local file system with SQLITE for catalog store, you can configure it like this:

# catalog:
#   default:
#     type: sql
#     uri: sqlite:////tmp/warehouse/pyiceberg_catalog.db
#     warehouse: file://///tmp/warehouse

# If using Iceberg with HDFS and SQLITE for catalog store, you can configure it like this:

catalog:
  default:
    type: sql
    uri: "sqlite:////tmp/warehouse/pyiceberg_catalog.db"
    warehouse: "hdfs://localhost:9000/user/hive/warehouse"  # HDFS warehouse path
    # hive.metastore.uris: "thrift://localhost:9083"
    # Additional Hive Metastore properties (optional)
    # HDFS configuration (if needed)
    fs.defaultFS: "hdfs://localhost:9000"
    # Kerberos authentication (uncomment if using Kerberos)
    # hadoop.security.authentication: "kerberos"
    # hadoop.security.authorization: "true"